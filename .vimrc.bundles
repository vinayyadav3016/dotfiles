"
" Type :so % to refresh .vimrc after making changes
" Type :PluginInstall to update
"

if &compatible
  set nocompatible
end

call plug#begin('~/.vim/bundle/')

""" Theme / Pretty stuff
"""

" [0] let vundle manage
Plug 'VundleVim/Vundle.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [1] Themes
Plug 'altercation/vim-colors-solarized'
Plug 'dracula/vim'
Plug 'octol/vim-cpp-enhanced-highlight'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [2] File tree viewer
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
" Fugitive will help with git related stuff, and show branch on status
Plug 'tpope/vim-fugitive' | Plug 'bling/vim-airline'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [3] Tmux
" Several plugins to help work with Tmux
Plug 'christoomey/vim-tmux-navigator'
Plug 'christoomey/vim-tmux-runner'
Plug 'christoomey/vim-run-interactive'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [4] search filesystem with ctrl+p
"Plug 'ctrlpvim/ctrlp.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [5] highlighting for Javascript
"Plug 'pangloss/vim-javascript' | Plug 'mxw/vim-jsx'
"Plug 'jimmyhchan/dustjs.vim' "Highlighting for dust
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [6] Utilities
Plug 'scrooloose/syntastic' "Syntax Highlighting
"Plug 'jiangmiao/auto-pairs' "MANY features, but mostly closes ([{' etc
Plug 'tpope/vim-surround'
"Plug 'vim-scripts/HTML-AutoCloseTag' "close tags after >
Plug 'vim-scripts/tComment' "Comment easily with gcc
Plug 'tpope/vim-repeat' "allow plugins to utilize . command
Plug 'vim-scripts/matchit.zip' " % also matches HTML tags / words / etc
Plug 'tmhedberg/matchit'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [7] Make gists of current buffer
Plug 'mattn/webapi-vim' | Plug 'mattn/gist-vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [8] Diary, notes, whatever. It's amazing
Plug 'vimwiki/vimwiki'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [9]
Plug 'SirVer/ultisnips' | Plug 'justinj/vim-react-snippets' | Plug 'colbycheeze/vim-snippets'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [10] Autocomplete tags
Plug 'ervandew/supertab'
"Plug 'Valloric/YouCompleteMe', {'do': './install.py'}
"Plug 'ternjs/tern_for_vim', {'do': 'npm install'}
Plug 'joereynolds/gtags-scope'
Plug 'jsfaint/gen_tags.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [11]
Plug 'editorconfig/editorconfig-vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [12] C Specific
Plug 'vim-scripts/c.vim'
Plug 'majutsushi/tagbar'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [13]
"Plug 'joonty/vdebug'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [14]
"Plug 'godlygeek/tabular'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [15]
"Plug 'lervag/vimtex'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [16] Vim Session
Plug 'xolox/vim-session'
Plug 'xolox/vim-misc'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [17]
Plug 'vim-scripts/ZoomWin'
Plug 'mtth/scratch.vim' "Open a throwaway scratch buffer
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [18]
Plug 'ledger/vim-ledger'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [19]
"Plug 'jceb/vim-orgmode'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" [20]
"Plug 'JamshedVesuna/vim-markdown-preview'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""" TODO / Plugins to evaluate
" Figure out how to create / version control my own snippets
" Figure out how to change matchit to ALSO use <tab>
" Plug 'Valloric/YouCompleteMe'
" Plug 'junegunn/vim-easy-align'


call plug#end()

"""" PLUGIN RELATED TWEAKS
""
"

" [1]
" Color scheme
syntax enable
let g:solarized_termcolors=16
set background=dark
colorscheme solarized
" colorscheme dracula
" colorscheme octol
" Allow powerline symbols to show up
let g:airline_powerline_fonts = 1

" [2] NerdTree
map <silent> <C-n> :NERDTreeToggle<cr>
" nnoremap <C-t> :call ToggleRelativeOn()<cr>
map <silent> <leader>k :NERDTreeToggle<cr>
map <silent> <leader>t :call ToggleRelativeOn()<cr>
" Close vim if only NERDTree is open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let NERDTreeDirArrowExpandable = '▷'
let NERDTreeDirArrowCollapsible = '▼'
let g:fzf_layout = { 'down': '~25%'  }

" [3]
" Allow moving around between Tmux windows
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
let g:tmux_navigator_no_mappings = 1
let g:tmux_navigator_save_on_switch = 1
"
"Open a tmux pane with Node
nnoremap <leader>node :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'node'}<cr>

" [4]
" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  let g:ctrlp_working_path_mode = 'r'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" [5] configure syntastic syntax checking to check on open as well as save
nnoremap <leader>sc :SyntasticCheck<cr>
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0 " Don't auto open/close location list
let g:syntastic_check_on_open=0
let g:syntastic_check_on_wq = 0
let g:syntastic_mode="passive"
let g:syntastic_enable_signs=0
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
" pymode setting
let g:pymode_lint_on_write = 0
"let g:pymode_python = 'python3'
"let g:pymode_rope=0
"let g:pymode_run = 0
" Allow highlighting of HTML within Javascript (for React)
let g:javascript_enable_domhtmlcss = 1
let g:jsx_ext_required = 0

" [6] Key mapping for Cosco.vim - space + ; to add semicolon or comma in Javascript or CSS
autocmd FileType javascript,css nnoremap <silent> <Leader>; :call cosco#commaOrSemiColon()<CR>
autocmd FileType javascript,css inoremap <silent> <Leader>; <c-o>:call cosco#commaOrSemiColon()<CR>

" [7] Gist setup
let g:gist_clip_command = 'pbcopy' "Using Gist will copy URL to clipboard automatically
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1

" [8] Set Vim Wiki to my Dropbox directory
let g:vimwiki_list = [{'path':'$HOME/Dropbox/vimwiki'}]

" [9]
" Set ultisnips triggers
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit="vertical"

" [10] make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
set cscopetag "search both cscopes db and the tags file

" [12]
nnoremap <Leader>tbo :TagbarOpen j<CR>
"inoremap <F2> <Esc>:TagbarOpen j<CR>a

nnoremap <Leader>tbt :TagbarToggle<CR>
"inoremap <S-F2> <Esc>:TagbarToggle<CR>a

" [16]
set sessionoptions-=options
let g:session_autosave = 'no'

" [22]
let vim_markdown_preview_browser='midori'

" Not sure what the below code does...look into Tern docs etc and figure it out?
" Found this snippet on a forum post that says it gets everything working
" https://github.com/Valloric/YouCompleteMe/issues/570
" autocmd FileType javascript setlocal omnifunc=tern#Complete

" " Run commands that require an interactive shell
" nnoremap <Leader>r :RunInInteractiveShell<space>
"


